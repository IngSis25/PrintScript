import org.gradle.api.GradleException
import org.gradle.internal.os.OperatingSystem

def root = rootProject

if (root.tasks.findByName('installGitHooks') == null) {
    root.tasks.register('installGitHooks') {
        group = 'git hooks'
        description = 'Instala el hook pre-commit en .git/hooks del repo'

        doLast {
            def hooksDir = root.file('.git/hooks')
            if (!hooksDir.exists()) {
                throw new GradleException(".git/hooks no existe. ¿Clonaste con git? Si abriste un .zip, no hay carpeta .git.")
            }

            def src = root.file('gradle/hooks/pre-commit')
            if (!src.exists()) {
                throw new GradleException("No se encontró ${src}. Creá el archivo en gradle/hooks/pre-commit")
            }

            def dst = new File(hooksDir, 'pre-commit')

            def content = src.getText('UTF-8').replace('\r\n', '\n')
            dst.setText(content, 'UTF-8')

            dst.setExecutable(true, false)

            if (!OperatingSystem.current().isWindows()) {
                root.exec {
                    commandLine 'chmod', '+x', dst.absolutePath
                    isIgnoreExitValue = true
                }
            }

            println "Hook pre-commit instalado en ${dst}."
            println "   Tip: rompé un test o el formato y probá 'git commit' para ver si bloquea."
        }
    }
}

tasks.register('installGitHooks') {
    group = 'git hooks'
    description = 'Delegates to rootProject:installGitHooks'
    dependsOn root.tasks.named('installGitHooks')
}
